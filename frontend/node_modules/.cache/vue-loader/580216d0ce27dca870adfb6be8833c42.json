{"remainingRequest":"/home/john/Documents/Projects/Хакатоны/mvd/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/john/Documents/Projects/Хакатоны/mvd/frontend/src/views/Main/Stat.vue?vue&type=style&index=0&id=c9a669d4&lang=scss&scoped=true&","dependencies":[{"path":"/home/john/Documents/Projects/Хакатоны/mvd/frontend/src/views/Main/Stat.vue","mtime":1620585171745},{"path":"/home/john/Documents/Projects/Хакатоны/mvd/frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/john/Documents/Projects/Хакатоны/mvd/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/john/Documents/Projects/Хакатоны/mvd/frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/john/Documents/Projects/Хакатоны/mvd/frontend/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/john/Documents/Projects/Хакатоны/mvd/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/john/Documents/Projects/Хакатоны/mvd/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKQGltcG9ydCAiQC9zdHlsZXMvY29tbW9uLnNjc3MiOwpAaW1wb3J0ICJAL3N0eWxlcy92aWV3cy9zdGF0LnNjc3MiOwo="},{"version":3,"sources":["Stat.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAqBA;AACA","file":"Stat.vue","sourceRoot":"src/views/Main","sourcesContent":["<template>\n  <div>\n    <StatFilter class=\"map-filter\" v-on:get-data=\"getData\" />\n    <DataTableHeaderClicker\n      :tableHeaders=\"tableHeaders\"\n      :tableItems=\"tableItems\"\n      v-on:get-chart=\"getChart\"\n      v-on:download=\"download\"\n    />\n    <v-card\n      class=\"chart-card\"\n      style=\"border-radius: 15px; max-height: 500px; margin-bottom: 60px\"\n      v-if=\"loaded\"\n      elevation=\"0\"\n    >\n      <Chart :chart-data=\"chartData\" />\n    </v-card>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n@import \"@/styles/common.scss\";\n@import \"@/styles/views/stat.scss\";\n</style>\n\n<script>\nimport StatFilter from \"@/components/stat/StatFilter.vue\";\nimport DataTableHeaderClicker from \"@/components/stat/DataTableHeaderClicker.vue\";\nimport Chart from \"@/components/Chart.vue\";\n\nexport default {\n  name: \"Stat\",\n  components: {\n    StatFilter,\n    DataTableHeaderClicker,\n    Chart,\n  },\n  data() {\n    return {\n      loaded: false,\n      chartData: {},\n\n      tableItems: [],\n\n      filterParams: {},\n\n      timeGroups: {\n        \"Все время\": null,\n        \"2.00 - 11.00\": 0,\n        \"11.00 - 16.00\": 1,\n        \"16.00 - 21.00\": 2,\n        \"21.00 - 2.00\": 3,\n      },\n\n      tableHeaders: [\n        { text: \"Время\", value: \"datetime\" },\n        { text: \"Город\", value: \"parent_region\" },\n        { text: \"Регион\", value: \"region\" },\n        { text: \"Адрес\", value: \"address\" },\n        { text: \"Способ совершения преступления\", value: \"category\" },\n        { text: \"Наименование органа\", value: \"organization\" },\n        { text: \"Вид уголовного преследования\", value: \"criminal_type\" },\n        { text: \"Кем выявлено\", value: \"employee\" },\n        { text: \"Квалификация преступления\", value: \"crime_qualification\" },\n        { text: \"Квалификация по УК\", value: \"yk_qualification\" },\n        { text: \"Тяжесть\", value: \"severity\" },\n        { text: \"Направленность\", value: \"crime_direction\" },\n        { text: \"Ущерб\", value: \"damage\" },\n        { text: \"Деньги\", value: \"money\" },\n        { text: \"Наименование наркотика\", value: \"drug_name\" },\n        { text: \"Масса наркотиков\", value: \"drug_weight\" },\n        { text: \"Количество пострадавших\", value: \"victim_number\" },\n        { text: \"Количество погибших\", value: \"dead_num\" },\n        { text: \"В процессе\", value: \"is_operative\" },\n        { text: \"Приготовление/покушение\", value: \"is_attempt\" },\n        { text: \"Освещение\", value: \"light\" },\n      ],\n    };\n  },\n\n  methods: {\n    download(format) {\n      let url = new URL(`${this.$store.state.backendUrl}/file/get/${format}/`);\n      if (this.filterParams) {\n        Object.keys(this.filterParams).forEach((key) => {\n          if (this.filterParams[key]) {\n            try {\n              url.searchParams.set(key, this.filterParams[key].toISOString());\n            } catch {\n              url.searchParams.set(key, this.filterParams[key]);\n            }\n          }\n        });\n      }\n      window.open(url.href);\n    },\n\n    getData(filterParams) {\n      this.filterParams = filterParams;\n      console.log(filterParams)\n      axios\n        .get(`${this.$store.state.backendUrl}/map/detail/`, {\n          params: filterParams\n        })\n        .then((r) => {\n          this.tableItems = r.data;\n        });\n    },\n\n    async getChart(column) {\n      this.filterParams.time_group = this.timeGroups[this.filterParams.time_group];\n\n      if (column != undefined) {\n        this.loaded = false;\n        await axios\n          .get(`${this.$store.state.backendUrl}/map/plot-diagram/${column}/`, {\n            params: this.filterParams,\n          })\n          .then((response) => {\n            let name = \"\";\n            for (let i = 0; i < this.tableHeaders.length; i++) {\n              if (this.tableHeaders[i].value == column) {\n                name = this.tableHeaders[i].text;\n              }\n            }\n\n            this.chartData = {\n              labels: response.data.map((x) => x.field),\n              datasets: [\n                {\n                  label: `Количество преступлений по ${name}`,\n                  borderColor: \"#EDAC48\",\n                  pointBackgroundColor: \"#EDAC48\",\n                  borderWidth: 1,\n                  pointBorderColor: \"white\",\n                  backgroundColor: \"#EDAC48\",\n                  data: response.data.map((x) => x.c),\n                },\n              ],\n            };\n\n            this.loaded = true;\n          });\n      }\n    },\n  },\n};\n</script>"]}]}