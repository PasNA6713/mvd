{"remainingRequest":"/home/john/Documents/Projects/Хакатоны/mvd/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/john/Documents/Projects/Хакатоны/mvd/frontend/src/views/Main/Home.vue?vue&type=style&index=0&id=2567576a&lang=scss&scoped=true&","dependencies":[{"path":"/home/john/Documents/Projects/Хакатоны/mvd/frontend/src/views/Main/Home.vue","mtime":1620583586729},{"path":"/home/john/Documents/Projects/Хакатоны/mvd/frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/john/Documents/Projects/Хакатоны/mvd/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/john/Documents/Projects/Хакатоны/mvd/frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/john/Documents/Projects/Хакатоны/mvd/frontend/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/john/Documents/Projects/Хакатоны/mvd/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/john/Documents/Projects/Хакатоны/mvd/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpAaW1wb3J0ICJAL3N0eWxlcy9jb21tb24uc2NzcyI7CkBpbXBvcnQgIkAvc3R5bGVzL3ZpZXdzL2hvbWUuc2NzcyI7Cg=="},{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;AACA","file":"Home.vue","sourceRoot":"src/views/Main","sourcesContent":["<template>\n  <div>\n    <MapFilter\n      class=\"map-filter\"\n      :theme=\"{ color: '#55884F' }\"\n      @get-data=\"getData\"\n    />\n    <v-row class=\"maps-container mt-2 mb-6 px-3\">\n      <v-col cols=\"6\">\n        <Map class=\"map\" :filterParams=\"filterData\" />\n        <v-card\n          class=\"chart-card\"\n          elevation=\"0\"\n          style=\"border-radius: 15px\"\n          v-if=\"loaded\"\n        >\n          <Chart :chart-data=\"chartData\" />\n        </v-card>\n      </v-col>\n\n      <v-col cols=\"6\">\n        <ClusterMap\n          class=\"map\"\n          :filterParams=\"filterData\"\n          @get-table=\"getTable\"\n        />\n        <DataTable\n          :tableHeaders=\"tableHeaders\"\n          :tableItems=\"clusterData\"\n          v-if=\"loaded\"\n          v-on:download=\"download\"\n        />\n      </v-col>\n    </v-row>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n@import \"@/styles/common.scss\";\n@import \"@/styles/views/home.scss\";\n</style>\n\n<script>\nimport Map from \"@/components/map/Map.vue\";\nimport Chart from \"@/components/Chart.vue\";\nimport ClusterMap from \"@/components/map/ClusterMap.vue\";\nimport MapFilter from \"@/components/map/MapFilter.vue\";\nimport DataTable from \"@/components/map/DataTable.vue\";\n\nexport default {\n  name: \"Home\",\n  components: {\n    Map,\n    ClusterMap,\n    MapFilter,\n    DataTable,\n    Chart,\n  },\n\n  data() {\n    return {\n      loaded: false,\n\n      filterData: {},\n      clusterData: [],\n      chartData: {},\n\n      tableHeaders: [\n        { text: \"Время\", filterable: true, align: \"start\", value: \"datetime\" },\n        { text: \"Регион\", filterable: true, align: \"start\", value: \"region\" },\n        { text: \"Адрес\", filterable: true, align: \"start\", value: \"address\" },\n        {\n          text: \"Категория\",\n          filterable: true,\n          align: \"start\",\n          value: \"category\",\n        },\n        { text: \"Освещение\", filterable: true, align: \"start\", value: \"light\" },\n      ],\n    };\n  },\n\n  methods: {\n    download(format) {\n      let url = new URL(`${this.$store.state.backendUrl}/file/cluster/${this.filterData.cluster_quontity}/${format}/`);\n      if (this.filterData) {\n        Object.keys(this.filterData).forEach((key) => {\n          if (this.filterData[key]) {\n            try {\n              url.searchParams.set(key, this.filterData[key].toISOString());\n            } catch {\n              url.searchParams.set(key, this.filterData[key]);\n            }\n          }\n        });\n      }\n      window.open(url.href);\n    },\n\n    getData(val) {\n      this.filterData = val;\n\n      axios\n        .get(`${this.$store.state.backendUrl}/map/plot-bar/`, {\n          params: {\n            category: this.filterData.category,\n            region: this.filterData.region,\n            light: this.filterData.light,\n            datetime_before: this.filterData.datetime_before,\n            datetime_after: this.filterData.datetime_after,\n            time_group: this.filterData.time_group,\n          },\n        })\n        .then((response) => {\n          this.chartData = {\n            labels: response.data.map((x) => x.month),\n            datasets: [\n              {\n                label: \"Количество преступлений по датам\",\n                borderColor: \"EDAC48\",\n                pointBackgroundColor: \"black\",\n                borderWidth: 1,\n                pointBorderColor: \"white\",\n                backgroundColor: \"#EDAC48\",\n                data: response.data.map((x) => x.c),\n              },\n            ],\n          };\n        });\n    },\n\n    getTable(val) {\n      this.loaded = false;\n      this.clusterData = val;\n      this.loaded = true;\n    },\n  },\n};\n</script>"]}]}