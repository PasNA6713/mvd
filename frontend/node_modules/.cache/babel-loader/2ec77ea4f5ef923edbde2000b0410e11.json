{"remainingRequest":"/home/john/Documents/Projects/Хакатоны/mvd/frontend/node_modules/babel-loader/lib/index.js!/home/john/Documents/Projects/Хакатоны/mvd/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/john/Documents/Projects/Хакатоны/mvd/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/john/Documents/Projects/Хакатоны/mvd/frontend/src/components/map/ClusterMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/john/Documents/Projects/Хакатоны/mvd/frontend/src/components/map/ClusterMap.vue","mtime":1620586708797},{"path":"/home/john/Documents/Projects/Хакатоны/mvd/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/john/Documents/Projects/Хакатоны/mvd/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/john/Documents/Projects/Хакатоны/mvd/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/john/Documents/Projects/Хакатоны/mvd/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ClusterMap.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <yandex-map id=\"map\"\n      :settings=\"settings\"\n      :coords=\"mapCenter\"\n      :zoom=\"10\" \n      :use-object-manager=\"true\"\n      :scrollZoom=\"false\"\n      :controls=\"['zoomControl']\"\n      @map-was-initialized=\"getMapInstance\"\n    >\n    </yandex-map>\n</template>\n\n<style lang=\"scss\" scoped>\n@import '@/styles/components/map.scss';\n</style>\n\n<script>\nimport { yandexMap, ymapMarker } from 'vue-yandex-maps'\nimport { formatedDateTime } from '@/utils/helpers.js'\n\nexport default {\n  name: \"ClusterMap\",\n  \n  props: {\n    filterParams: Object\n  },\n\n  components: {\n    yandexMap,\n    ymapMarker\n  },\n\n  data() {\n    return {\n      clusterMap: null,\n      settings: {\n        apiKey: 'e70694c3-ce7f-4459-b7f6-be3d53e2cc8e',\n        lang: 'ru_RU',\n        coordorder: 'latlong',\n        version: '2.1',\n      },\n      mapCenter: [59.9370, 30.3089],\n      clusters: [],\n      points: [],\n      clusterCounter: 1,\n      objectManager: null,\n\n      pressed: false,\n      userPoint: {\n        coords: null,\n        points: null,\n      },\n      userPlacemark: null\n    }\n  },\n\n  methods: {\n    drawTable(cluster, cid) {\n      for(let i=0;i<cluster.length;i++) {\n        cluster[i].datetime = formatedDateTime(cluster[i].datetime)\n        cluster[i].cid = cid\n      }\n\n      this.$emit('get-table',cluster)\n    },\n\n    clickPoint(e) {\n      let target = e.get('objectId')\n      let point = this.objectManager.objects.getById(target)\n\n      axios.post(`${this.$store.state.backendUrl}/map/some/`,{\n        ids: point.properties.points\n      }).then(response => {\n        this.drawTable(response.data, point.id)\n\n        let scrollElement = document.getElementById('map');\n        scrollElement.scrollBottom = scrollElement.scrollHeight;\n        this.$vuetify.goTo(scrollElement);\n      })\n    },\n\n    async getMapInstance(map) {\n      if(map) {\n        try {\n          this.clusterMap = map\n          this.objectManager = new ymaps.ObjectManager({\n            clusterize: false,\n            gridSize: 32,\n            clusterDisableClickZoom: true\n          })\n          this.clusterMap.geoObjects.events.add('click', (e) => (this.clickPoint(e)))\n          this.clusterMap.events.add('click', (e) => (this.clickUserPoint(e)))\n\n          try {\n            this.objectManager.add(this.clusters)\n            this.clusterMap.geoObjects.add(this.objectManager)\n          } catch (error) {\n            console.log('no clusters!')\n          }\n        } catch (error) {\n          console.log(error)\n        }\n      }\n    },\n\n    async clickUserPoint(e) {\n      if (this.pressed) {\n          if (this.userPlacemark) {\n            this.clusterMap.geoObjects.remove(this.userPlacemark)\n          }\n\n          this.userPoint.coords = e.get('coords')\n\n          await axios.post(`${this.$store.state.backendUrl}/map/range/?category=Убийство`, {\n              lat: this.userPoint.coords[0],\n              long: this.userPoint.coords[1]\n          }).then(response => {\n              this.userPlacemark = new ymaps.Placemark(this.userPoint.coords)\n              this.clusterMap.geoObjects.add(this.userPlacemark)\n              this.pressed = false\n          })\n        }\n    },\n\n    changeAccessToMap() {\n      this.pressed = !this.pressed\n    },\n\n    deleteUserPoint() {\n      this.clusterMap.geoObjects.remove(this.userPlacemark)\n      this.userPlacemark = null\n    },\n  },\n\n  watch: {\n    filterParams: function(filterParams) {\n      this.objectManager.removeAll()\n      this.clusters = []\n\n      axios.get(`${this.$store.state.backendUrl}/cluster/${filterParams.cluster_quontity}/`, {\n        params: {\n          category: filterParams.category,\n          region: filterParams.region,\n          light: filterParams.light,\n          datetime_before: filterParams.datetime_before, \n          datetime_after: filterParams.datetime_after,\n          time_group: filterParams.time_group\n        }\n      }\n      ).then(response => {\n            for (let i=0; i<response.data.length;i++){\n              let cluster = {\n                type: 'Feature',\n                id: this.clusterCounter,\n                geometry: {\n                    type: 'Point',\n                    coordinates: [response.data[i][\"lat\"], response.data[i][\"long\"]]\n                },\n                properties: {\n                    points: response.data[i][\"points\"]\n                },\n                options: {\n                    preset: \"islands#dotIcon\",\n                    iconColor: \"red\"\n                }\n              }\n              \n              this.clusterCounter += 1\n              this.clusters.push(cluster)\n              this.points.push(...cluster.properties.points)\n            }\n          \n          this.objectManager.add(this.clusters)\n          axios.post(`${this.$store.state.backendUrl}/map/some/`,{\n            ids: this.points\n          }).then(response => {\n            for(let i=0;i<response.data.length;i++) response.data[i].datetime = formatedDateTime(response.data[i].datetime)\n            this.$emit('get-table',response.data)\n          })\n      })\n    }\n  }\n}\n</script>"],"sourceRoot":"src/components/map"}]}