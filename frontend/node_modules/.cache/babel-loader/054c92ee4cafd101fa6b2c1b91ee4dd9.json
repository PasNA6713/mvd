{"remainingRequest":"/home/john/Documents/Projects/Хакатоны/mvd/frontend/node_modules/babel-loader/lib/index.js!/home/john/Documents/Projects/Хакатоны/mvd/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/john/Documents/Projects/Хакатоны/mvd/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/john/Documents/Projects/Хакатоны/mvd/frontend/src/components/map/Map.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/john/Documents/Projects/Хакатоны/mvd/frontend/src/components/map/Map.vue","mtime":1620583580966},{"path":"/home/john/Documents/Projects/Хакатоны/mvd/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/john/Documents/Projects/Хакатоны/mvd/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/john/Documents/Projects/Хакатоны/mvd/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/john/Documents/Projects/Хакатоны/mvd/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL2pvaG4vRG9jdW1lbnRzL1Byb2plY3RzL1x1MDQyNVx1MDQzMFx1MDQzQVx1MDQzMFx1MDQ0Mlx1MDQzRVx1MDQzRFx1MDQ0Qi9tdmQvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyB5YW5kZXhNYXAsIHltYXBNYXJrZXIgfSBmcm9tICd2dWUteWFuZGV4LW1hcHMnOwppbXBvcnQgeyBmb3JtYXRlZERhdGVUaW1lIH0gZnJvbSAnQC91dGlscy9oZWxwZXJzLmpzJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJNYXAiLAogIHByb3BzOiB7CiAgICBmaWx0ZXJQYXJhbXM6IE9iamVjdAogIH0sCiAgY29tcG9uZW50czogewogICAgeWFuZGV4TWFwOiB5YW5kZXhNYXAsCiAgICB5bWFwTWFya2VyOiB5bWFwTWFya2VyCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY2x1c3Rlck1hcDogbnVsbCwKICAgICAgc2V0dGluZ3M6IHsKICAgICAgICBhcGlLZXk6ICdlNzA2OTRjMy1jZTdmLTQ0NTktYjdmNi1iZTNkNTNlMmNjOGUnLAogICAgICAgIGxhbmc6ICdydV9SVScsCiAgICAgICAgY29vcmRvcmRlcjogJ2xhdGxvbmcnLAogICAgICAgIHZlcnNpb246ICcyLjEnCiAgICAgIH0sCiAgICAgIG1hcENlbnRlcjogWzU5LjkzNzAsIDMwLjMwODldLAogICAgICBwb2ludHM6IFtdLAogICAgICBvYmplY3RNYW5hZ2VyOiBudWxsCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgY2xpY2tQb2ludDogZnVuY3Rpb24gY2xpY2tQb2ludChlKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB2YXIgdGFyZ2V0ID0gZS5nZXQoJ29iamVjdElkJyk7CgogICAgICBpZiAodGhpcy5vYmplY3RNYW5hZ2VyLmNsdXN0ZXJzLmdldEJ5SWQodGFyZ2V0KSkgewogICAgICAgIHZhciBjbHVzdGVyID0gdGhpcy5vYmplY3RNYW5hZ2VyLmNsdXN0ZXJzLmdldEJ5SWQodGFyZ2V0KTsKICAgICAgICB2YXIgb2JqZWN0cyA9IGNsdXN0ZXIucHJvcGVydGllcy5nZW9PYmplY3RzOwogICAgICAgIHZhciBidWYgPSBbXTsKICAgICAgICBvYmplY3RzLmZvckVhY2goZnVuY3Rpb24gKGVsZW1lbnQpIHsKICAgICAgICAgIGJ1Zi5wdXNoKGVsZW1lbnQuaWQpOwogICAgICAgIH0pOwogICAgICAgIGF4aW9zLnBvc3QoIiIuY29uY2F0KHRoaXMuJHN0b3JlLnN0YXRlLmJhY2tlbmRVcmwsICIvbWFwL3NvbWUvIiksIHsKICAgICAgICAgIGlkczogYnVmCiAgICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgIG9iamVjdHMuc29ydChmdW5jdGlvbiAocHJldiwgbmV4dCkgewogICAgICAgICAgICByZXR1cm4gcHJldi5pZCAtIG5leHQuaWQ7CiAgICAgICAgICB9KTsKICAgICAgICAgIHZhciBjbHVzdGVyRGF0YSA9IHJlc3BvbnNlLmRhdGEuc29ydChmdW5jdGlvbiAocHJldiwgbmV4dCkgewogICAgICAgICAgICByZXR1cm4gcHJldi5pZCAtIG5leHQuaWQ7CiAgICAgICAgICB9KTsKCiAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGNsdXN0ZXJEYXRhLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgIG9iamVjdHNbaV0ucHJvcGVydGllcyA9IHsKICAgICAgICAgICAgICBjbHVzdGVyQ2FwdGlvbjogY2x1c3RlckRhdGFbaV0uYWRkcmVzcywKICAgICAgICAgICAgICBiYWxsb29uQ29udGVudEhlYWRlcjogY2x1c3RlckRhdGFbaV0uYWRkcmVzcyA/ICI8YT4iLmNvbmNhdChjbHVzdGVyRGF0YVtpXS5hZGRyZXNzLCAiPC9hPiIpIDogIjxhPiIuY29uY2F0KGNsdXN0ZXJEYXRhW2ldLmFkZHJlc3MsICI8L2E+IiksCiAgICAgICAgICAgICAgYmFsbG9vbkNvbnRlbnRCb2R5OiBjbHVzdGVyRGF0YVtpXS5jYXRlZ29yeSwKICAgICAgICAgICAgICBiYWxsb29uQ29udGVudEZvb3RlcjogZm9ybWF0ZWREYXRlVGltZShjbHVzdGVyRGF0YVtpXS5kYXRldGltZSkKICAgICAgICAgICAgfTsKICAgICAgICAgIH0KCiAgICAgICAgICBfdGhpcy5vYmplY3RNYW5hZ2VyLmNsdXN0ZXJzLnN0YXRlLnNldCgnYWN0aXZlT2JqZWN0JywgY2x1c3Rlcik7CgogICAgICAgICAgX3RoaXMub2JqZWN0TWFuYWdlci5jbHVzdGVycy5zdGF0ZS5zZXQoJ2FjdGl2ZU9iamVjdCcsIG9iamVjdHNbMF0pOwogICAgICAgIH0pOwogICAgICB9IGVsc2UgewogICAgICAgIHZhciBwb2ludCA9IHRoaXMub2JqZWN0TWFuYWdlci5vYmplY3RzLmdldEJ5SWQodGFyZ2V0KTsKICAgICAgICBheGlvcy5nZXQoIiIuY29uY2F0KHRoaXMuJHN0b3JlLnN0YXRlLmJhY2tlbmRVcmwsICIvbWFwLyIpLmNvbmNhdCh0YXJnZXQsICIvIikpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICB2YXIgY29vcmRzID0gcG9pbnQuZ2VvbWV0cnkuY29vcmRpbmF0ZXM7CgogICAgICAgICAgX3RoaXMuY2x1c3Rlck1hcC5iYWxsb29uLm9wZW4oY29vcmRzLCB7CiAgICAgICAgICAgIGNvbnRlbnRCb2R5OiByZXNwb25zZS5kYXRhLmNhdGVnb3J5ICsgIiAiICsgZm9ybWF0ZWREYXRlVGltZShyZXNwb25zZS5kYXRhLmRhdGV0aW1lKQogICAgICAgICAgfSk7CiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0sCiAgICBnZXRNYXBJbnN0YW5jZTogZnVuY3Rpb24gZ2V0TWFwSW5zdGFuY2UobWFwKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBpZiAobWFwKSB7CiAgICAgICAgICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgICAgICAgICAgX3RoaXMyLmNsdXN0ZXJNYXAgPSBtYXA7CiAgICAgICAgICAgICAgICAgICAgX3RoaXMyLm9iamVjdE1hbmFnZXIgPSBuZXcgeW1hcHMuT2JqZWN0TWFuYWdlcih7CiAgICAgICAgICAgICAgICAgICAgICBjbHVzdGVyaXplOiB0cnVlLAogICAgICAgICAgICAgICAgICAgICAgZ3JpZFNpemU6IDMyLAogICAgICAgICAgICAgICAgICAgICAgY2x1c3RlckRpc2FibGVDbGlja1pvb206IHRydWUKICAgICAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICAgICAgX3RoaXMyLmNsdXN0ZXJNYXAuZ2VvT2JqZWN0cy5ldmVudHMuYWRkKCdjbGljaycsIGZ1bmN0aW9uIChlKSB7CiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMyLmNsaWNrUG9pbnQoZSk7CiAgICAgICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgICAgICAgICAgICBfdGhpczIub2JqZWN0TWFuYWdlci5hZGQoX3RoaXMyLnBvaW50cyk7CgogICAgICAgICAgICAgICAgICAgICAgX3RoaXMyLmNsdXN0ZXJNYXAuZ2VvT2JqZWN0cy5hZGQoX3RoaXMyLm9iamVjdE1hbmFnZXIpOwogICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnbm8gcG9pbnRzIScpOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgY2FzZSAxOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIGZpbHRlclBhcmFtczogZnVuY3Rpb24gZmlsdGVyUGFyYW1zKF9maWx0ZXJQYXJhbXMpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICB0aGlzLm9iamVjdE1hbmFnZXIucmVtb3ZlQWxsKCk7CiAgICAgIHRoaXMucG9pbnRzID0gW107CiAgICAgIGF4aW9zLmdldCgiIi5jb25jYXQodGhpcy4kc3RvcmUuc3RhdGUuYmFja2VuZFVybCwgIi9tYXAvIiksIHsKICAgICAgICBwYXJhbXM6IHsKICAgICAgICAgIGNhdGVnb3J5OiBfZmlsdGVyUGFyYW1zLmNhdGVnb3J5LAogICAgICAgICAgcmVnaW9uOiBfZmlsdGVyUGFyYW1zLnJlZ2lvbiwKICAgICAgICAgIGxpZ2h0OiBfZmlsdGVyUGFyYW1zLmxpZ2h0LAogICAgICAgICAgZGF0ZXRpbWVfYmVmb3JlOiBfZmlsdGVyUGFyYW1zLmRhdGV0aW1lX2JlZm9yZSwKICAgICAgICAgIGRhdGV0aW1lX2FmdGVyOiBfZmlsdGVyUGFyYW1zLmRhdGV0aW1lX2FmdGVyLAogICAgICAgICAgdGltZV9ncm91cDogX2ZpbHRlclBhcmFtcy50aW1lX2dyb3VwCiAgICAgICAgfQogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcmVzcG9uc2UuZGF0YS5sZW5ndGg7IGkrKykgewogICAgICAgICAgdmFyIG1hcmtlciA9IHsKICAgICAgICAgICAgdHlwZTogJ0ZlYXR1cmUnLAogICAgICAgICAgICBpZDogcmVzcG9uc2UuZGF0YVtpXVsiaWQiXSwKICAgICAgICAgICAgZ2VvbWV0cnk6IHsKICAgICAgICAgICAgICB0eXBlOiAnUG9pbnQnLAogICAgICAgICAgICAgIGNvb3JkaW5hdGVzOiBbcmVzcG9uc2UuZGF0YVtpXVsibGF0Il0sIHJlc3BvbnNlLmRhdGFbaV1bImxvbmciXV0KICAgICAgICAgICAgfQogICAgICAgICAgfTsKCiAgICAgICAgICBfdGhpczMucG9pbnRzLnB1c2gobWFya2VyKTsKICAgICAgICB9CgogICAgICAgIF90aGlzMy5vYmplY3RNYW5hZ2VyLmFkZChfdGhpczMucG9pbnRzKTsKICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["Map.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <yandex-map id=\"map\"\n      :settings=\"settings\"\n      :coords=\"mapCenter\"\n      :zoom=\"10\" \n      :use-object-manager=\"true\"\n      :scrollZoom=\"false\"\n      :controls=\"['zoomControl']\"\n      @map-was-initialized=\"getMapInstance\"\n    >\n    </yandex-map>\n</template>\n\n<style lang=\"scss\" scoped>\n@import '@/styles/common.scss';\n@import '@/styles/components/map.scss';\n</style>\n\n<script>\nimport { yandexMap, ymapMarker } from 'vue-yandex-maps'\nimport { formatedDateTime } from '@/utils/helpers.js'\n\nexport default {\n  name: \"Map\",\n  props: {\n    filterParams: Object\n  },\n  components: {\n    yandexMap,\n    ymapMarker\n  },\n  data() {\n    return {\n      clusterMap: null,\n      settings: {\n        apiKey: 'e70694c3-ce7f-4459-b7f6-be3d53e2cc8e',\n        lang: 'ru_RU',\n        coordorder: 'latlong',\n        version: '2.1',\n      },\n      mapCenter: [59.9370, 30.3089],\n      points: [],\n      objectManager: null\n    }\n  },\n\n  methods: {\n    clickPoint(e) {\n      let target = e.get('objectId')\n      if (this.objectManager.clusters.getById(target)) {\n        let cluster = this.objectManager.clusters.getById(target)\n        let objects = cluster.properties.geoObjects\n        let buf = []\n\n        objects.forEach(element => {\n          buf.push(element.id)\n        })\n        axios.post(`${this.$store.state.backendUrl}/map/some/`,{\n          ids: buf\n        }).then(response => {\n          objects.sort((prev, next) => prev.id - next.id)\n          let clusterData = response.data.sort((prev, next) => prev.id - next.id)\n\n          for(let i=0;i<clusterData.length;i++) {\n            objects[i].properties = {\n              clusterCaption: clusterData[i].address,\n              balloonContentHeader: (clusterData[i].address) ? `<a>${clusterData[i].address}</a>` : `<a>${clusterData[i].address}</a>`,\n              balloonContentBody: clusterData[i].category,\n              balloonContentFooter: formatedDateTime(clusterData[i].datetime), \n            }  \n          }\n          this.objectManager.clusters.state.set('activeObject', cluster)\n          this.objectManager.clusters.state.set('activeObject', objects[0])\n        })\n      }\n      else {\n        let point = this.objectManager.objects.getById(target)\n        axios.get(`${this.$store.state.backendUrl}/map/${target}/`\n        ).then(response => {\n          let coords = point.geometry.coordinates\n          this.clusterMap.balloon.open(coords, {\n            contentBody: response.data.category + \" \" + formatedDateTime(response.data.datetime)\n          })\n        })\n      }\n    },\n\n    async getMapInstance(map) {\n      if(map) {\n        try {\n          this.clusterMap = map\n          this.objectManager = new ymaps.ObjectManager({\n            clusterize: true,\n            gridSize: 32,\n            clusterDisableClickZoom: true\n          })\n          this.clusterMap.geoObjects.events.add('click', (e) => (this.clickPoint(e)))\n\n          try {\n            this.objectManager.add(this.points)\n            this.clusterMap.geoObjects.add(this.objectManager)\n          } catch (error) {\n            console.log('no points!')\n          }\n        } catch (error) {\n          console.log(error)\n        }\n      }\n    },\n  },\n\n  watch: {\n    filterParams: function(filterParams) {\n      this.objectManager.removeAll()\n      this.points = []\n\n      axios.get(`${this.$store.state.backendUrl}/map/`, {\n        params: {\n          category: filterParams.category,\n          region: filterParams.region,\n          light: filterParams.light,\n          datetime_before: filterParams.datetime_before, \n          datetime_after: filterParams.datetime_after,\n          time_group: filterParams.time_group\n        }\n      }\n      ).then(response => {\n          for (let i=0;i<response.data.length;i++){\n            let marker = {\n              type: 'Feature',\n              id: response.data[i][\"id\"],\n              geometry: {\n                  type: 'Point',\n                  coordinates: [response.data[i][\"lat\"], response.data[i][\"long\"]]\n              }\n            }\n            this.points.push(marker)\n          }\n          this.objectManager.add(this.points)\n      })\n    }\n  }\n}\n</script>"],"sourceRoot":"src/components/map"}]}