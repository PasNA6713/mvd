{"remainingRequest":"/home/john/Documents/Projects/Хакатоны/mvd/frontend/node_modules/babel-loader/lib/index.js!/home/john/Documents/Projects/Хакатоны/mvd/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/john/Documents/Projects/Хакатоны/mvd/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/john/Documents/Projects/Хакатоны/mvd/frontend/src/views/Main/Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/john/Documents/Projects/Хакатоны/mvd/frontend/src/views/Main/Home.vue","mtime":1620583586729},{"path":"/home/john/Documents/Projects/Хакатоны/mvd/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/john/Documents/Projects/Хакатоны/mvd/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/john/Documents/Projects/Хакатоны/mvd/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/john/Documents/Projects/Хакатоны/mvd/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIudXJsLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5rZXlzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IE1hcCBmcm9tICJAL2NvbXBvbmVudHMvbWFwL01hcC52dWUiOwppbXBvcnQgQ2hhcnQgZnJvbSAiQC9jb21wb25lbnRzL0NoYXJ0LnZ1ZSI7CmltcG9ydCBDbHVzdGVyTWFwIGZyb20gIkAvY29tcG9uZW50cy9tYXAvQ2x1c3Rlck1hcC52dWUiOwppbXBvcnQgTWFwRmlsdGVyIGZyb20gIkAvY29tcG9uZW50cy9tYXAvTWFwRmlsdGVyLnZ1ZSI7CmltcG9ydCBEYXRhVGFibGUgZnJvbSAiQC9jb21wb25lbnRzL21hcC9EYXRhVGFibGUudnVlIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJIb21lIiwKICBjb21wb25lbnRzOiB7CiAgICBNYXA6IE1hcCwKICAgIENsdXN0ZXJNYXA6IENsdXN0ZXJNYXAsCiAgICBNYXBGaWx0ZXI6IE1hcEZpbHRlciwKICAgIERhdGFUYWJsZTogRGF0YVRhYmxlLAogICAgQ2hhcnQ6IENoYXJ0CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbG9hZGVkOiBmYWxzZSwKICAgICAgZmlsdGVyRGF0YToge30sCiAgICAgIGNsdXN0ZXJEYXRhOiBbXSwKICAgICAgY2hhcnREYXRhOiB7fSwKICAgICAgdGFibGVIZWFkZXJzOiBbewogICAgICAgIHRleHQ6ICLQktGA0LXQvNGPIiwKICAgICAgICBmaWx0ZXJhYmxlOiB0cnVlLAogICAgICAgIGFsaWduOiAic3RhcnQiLAogICAgICAgIHZhbHVlOiAiZGF0ZXRpbWUiCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAi0KDQtdCz0LjQvtC9IiwKICAgICAgICBmaWx0ZXJhYmxlOiB0cnVlLAogICAgICAgIGFsaWduOiAic3RhcnQiLAogICAgICAgIHZhbHVlOiAicmVnaW9uIgogICAgICB9LCB7CiAgICAgICAgdGV4dDogItCQ0LTRgNC10YEiLAogICAgICAgIGZpbHRlcmFibGU6IHRydWUsCiAgICAgICAgYWxpZ246ICJzdGFydCIsCiAgICAgICAgdmFsdWU6ICJhZGRyZXNzIgogICAgICB9LCB7CiAgICAgICAgdGV4dDogItCa0LDRgtC10LPQvtGA0LjRjyIsCiAgICAgICAgZmlsdGVyYWJsZTogdHJ1ZSwKICAgICAgICBhbGlnbjogInN0YXJ0IiwKICAgICAgICB2YWx1ZTogImNhdGVnb3J5IgogICAgICB9LCB7CiAgICAgICAgdGV4dDogItCe0YHQstC10YnQtdC90LjQtSIsCiAgICAgICAgZmlsdGVyYWJsZTogdHJ1ZSwKICAgICAgICBhbGlnbjogInN0YXJ0IiwKICAgICAgICB2YWx1ZTogImxpZ2h0IgogICAgICB9XQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGRvd25sb2FkOiBmdW5jdGlvbiBkb3dubG9hZChmb3JtYXQpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciB1cmwgPSBuZXcgVVJMKCIiLmNvbmNhdCh0aGlzLiRzdG9yZS5zdGF0ZS5iYWNrZW5kVXJsLCAiL2ZpbGUvY2x1c3Rlci8iKS5jb25jYXQodGhpcy5maWx0ZXJEYXRhLmNsdXN0ZXJfcXVvbnRpdHksICIvIikuY29uY2F0KGZvcm1hdCwgIi8iKSk7CgogICAgICBpZiAodGhpcy5maWx0ZXJEYXRhKSB7CiAgICAgICAgT2JqZWN0LmtleXModGhpcy5maWx0ZXJEYXRhKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsKICAgICAgICAgIGlmIChfdGhpcy5maWx0ZXJEYXRhW2tleV0pIHsKICAgICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgICB1cmwuc2VhcmNoUGFyYW1zLnNldChrZXksIF90aGlzLmZpbHRlckRhdGFba2V5XS50b0lTT1N0cmluZygpKTsKICAgICAgICAgICAgfSBjYXRjaCAoX3VudXNlZCkgewogICAgICAgICAgICAgIHVybC5zZWFyY2hQYXJhbXMuc2V0KGtleSwgX3RoaXMuZmlsdGVyRGF0YVtrZXldKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICB9CgogICAgICB3aW5kb3cub3Blbih1cmwuaHJlZik7CiAgICB9LAogICAgZ2V0RGF0YTogZnVuY3Rpb24gZ2V0RGF0YSh2YWwpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB0aGlzLmZpbHRlckRhdGEgPSB2YWw7CiAgICAgIGF4aW9zLmdldCgiIi5jb25jYXQodGhpcy4kc3RvcmUuc3RhdGUuYmFja2VuZFVybCwgIi9tYXAvcGxvdC1iYXIvIiksIHsKICAgICAgICBwYXJhbXM6IHsKICAgICAgICAgIGNhdGVnb3J5OiB0aGlzLmZpbHRlckRhdGEuY2F0ZWdvcnksCiAgICAgICAgICByZWdpb246IHRoaXMuZmlsdGVyRGF0YS5yZWdpb24sCiAgICAgICAgICBsaWdodDogdGhpcy5maWx0ZXJEYXRhLmxpZ2h0LAogICAgICAgICAgZGF0ZXRpbWVfYmVmb3JlOiB0aGlzLmZpbHRlckRhdGEuZGF0ZXRpbWVfYmVmb3JlLAogICAgICAgICAgZGF0ZXRpbWVfYWZ0ZXI6IHRoaXMuZmlsdGVyRGF0YS5kYXRldGltZV9hZnRlciwKICAgICAgICAgIHRpbWVfZ3JvdXA6IHRoaXMuZmlsdGVyRGF0YS50aW1lX2dyb3VwCiAgICAgICAgfQogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIF90aGlzMi5jaGFydERhdGEgPSB7CiAgICAgICAgICBsYWJlbHM6IHJlc3BvbnNlLmRhdGEubWFwKGZ1bmN0aW9uICh4KSB7CiAgICAgICAgICAgIHJldHVybiB4Lm1vbnRoOwogICAgICAgICAgfSksCiAgICAgICAgICBkYXRhc2V0czogW3sKICAgICAgICAgICAgbGFiZWw6ICLQmtC+0LvQuNGH0LXRgdGC0LLQviDQv9GA0LXRgdGC0YPQv9C70LXQvdC40Lkg0L/QviDQtNCw0YLQsNC8IiwKICAgICAgICAgICAgYm9yZGVyQ29sb3I6ICJFREFDNDgiLAogICAgICAgICAgICBwb2ludEJhY2tncm91bmRDb2xvcjogImJsYWNrIiwKICAgICAgICAgICAgYm9yZGVyV2lkdGg6IDEsCiAgICAgICAgICAgIHBvaW50Qm9yZGVyQ29sb3I6ICJ3aGl0ZSIsCiAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogIiNFREFDNDgiLAogICAgICAgICAgICBkYXRhOiByZXNwb25zZS5kYXRhLm1hcChmdW5jdGlvbiAoeCkgewogICAgICAgICAgICAgIHJldHVybiB4LmM7CiAgICAgICAgICAgIH0pCiAgICAgICAgICB9XQogICAgICAgIH07CiAgICAgIH0pOwogICAgfSwKICAgIGdldFRhYmxlOiBmdW5jdGlvbiBnZXRUYWJsZSh2YWwpIHsKICAgICAgdGhpcy5sb2FkZWQgPSBmYWxzZTsKICAgICAgdGhpcy5jbHVzdGVyRGF0YSA9IHZhbDsKICAgICAgdGhpcy5sb2FkZWQgPSB0cnVlOwogICAgfQogIH0KfTs="},{"version":3,"sources":["Home.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <MapFilter\n      class=\"map-filter\"\n      :theme=\"{ color: '#55884F' }\"\n      @get-data=\"getData\"\n    />\n    <v-row class=\"maps-container mt-2 mb-6 px-3\">\n      <v-col cols=\"6\">\n        <Map class=\"map\" :filterParams=\"filterData\" />\n        <v-card\n          class=\"chart-card\"\n          elevation=\"0\"\n          style=\"border-radius: 15px\"\n          v-if=\"loaded\"\n        >\n          <Chart :chart-data=\"chartData\" />\n        </v-card>\n      </v-col>\n\n      <v-col cols=\"6\">\n        <ClusterMap\n          class=\"map\"\n          :filterParams=\"filterData\"\n          @get-table=\"getTable\"\n        />\n        <DataTable\n          :tableHeaders=\"tableHeaders\"\n          :tableItems=\"clusterData\"\n          v-if=\"loaded\"\n          v-on:download=\"download\"\n        />\n      </v-col>\n    </v-row>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n@import \"@/styles/common.scss\";\n@import \"@/styles/views/home.scss\";\n</style>\n\n<script>\nimport Map from \"@/components/map/Map.vue\";\nimport Chart from \"@/components/Chart.vue\";\nimport ClusterMap from \"@/components/map/ClusterMap.vue\";\nimport MapFilter from \"@/components/map/MapFilter.vue\";\nimport DataTable from \"@/components/map/DataTable.vue\";\n\nexport default {\n  name: \"Home\",\n  components: {\n    Map,\n    ClusterMap,\n    MapFilter,\n    DataTable,\n    Chart,\n  },\n\n  data() {\n    return {\n      loaded: false,\n\n      filterData: {},\n      clusterData: [],\n      chartData: {},\n\n      tableHeaders: [\n        { text: \"Время\", filterable: true, align: \"start\", value: \"datetime\" },\n        { text: \"Регион\", filterable: true, align: \"start\", value: \"region\" },\n        { text: \"Адрес\", filterable: true, align: \"start\", value: \"address\" },\n        {\n          text: \"Категория\",\n          filterable: true,\n          align: \"start\",\n          value: \"category\",\n        },\n        { text: \"Освещение\", filterable: true, align: \"start\", value: \"light\" },\n      ],\n    };\n  },\n\n  methods: {\n    download(format) {\n      let url = new URL(`${this.$store.state.backendUrl}/file/cluster/${this.filterData.cluster_quontity}/${format}/`);\n      if (this.filterData) {\n        Object.keys(this.filterData).forEach((key) => {\n          if (this.filterData[key]) {\n            try {\n              url.searchParams.set(key, this.filterData[key].toISOString());\n            } catch {\n              url.searchParams.set(key, this.filterData[key]);\n            }\n          }\n        });\n      }\n      window.open(url.href);\n    },\n\n    getData(val) {\n      this.filterData = val;\n\n      axios\n        .get(`${this.$store.state.backendUrl}/map/plot-bar/`, {\n          params: {\n            category: this.filterData.category,\n            region: this.filterData.region,\n            light: this.filterData.light,\n            datetime_before: this.filterData.datetime_before,\n            datetime_after: this.filterData.datetime_after,\n            time_group: this.filterData.time_group,\n          },\n        })\n        .then((response) => {\n          this.chartData = {\n            labels: response.data.map((x) => x.month),\n            datasets: [\n              {\n                label: \"Количество преступлений по датам\",\n                borderColor: \"EDAC48\",\n                pointBackgroundColor: \"black\",\n                borderWidth: 1,\n                pointBorderColor: \"white\",\n                backgroundColor: \"#EDAC48\",\n                data: response.data.map((x) => x.c),\n              },\n            ],\n          };\n        });\n    },\n\n    getTable(val) {\n      this.loaded = false;\n      this.clusterData = val;\n      this.loaded = true;\n    },\n  },\n};\n</script>"],"sourceRoot":"src/views/Main"}]}